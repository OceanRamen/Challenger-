[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.module]
source = 'nativefs.lua'
before = 'main.lua'
name = 'nativefs'

[[patches]]
[patches.copy]
target = "main.lua"
position = "append"
sources = ["Core/Main.lua"]

# [[patches]]
# [patches.pattern]
# target = "functions/UI_definitions.lua"
# pattern = """G.F_DAILIES and {n=G.UIT.R, config={align = "cm", padding = 0.1, r = 0.1 ,colour = G.C.BLACK}, nodes={"""
# position = "before"
# payload = """
# {n=G.UIT.R, config={align = "cm", padding = 0.1, r = 0.1 ,colour = G.C.BLACK}, nodes={Challenger.challenger_overview}},
# """
# match_indent = true
# overwrite = false

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "function init_localization()"
position = "after"
payload = '''
localizeChallengeNames()
'''
match_indent = true
overwrite = false


[[patches]]
[patches.regex]
target = "functions/UI_definitions.lua"
pattern = '\{n=G\.UIT\.C,\s*config=\{align\s*=\s*"[a-z]+",\s*padding\s*=\s*[0-9.]+,\s*colour\s*=\s*G\.C\.[A-Z_]+,\s*r\s*=\s*[0-9.]+,\s*minw\s*=\s*[0-9]+\},\s*nodes=\{\s*[a-zA-Z_]+,\s*[a-zA-Z_]+\s*\}\s*\}'
position = 'at'
line_prepend = '$indent'
payload = '''
      {n = G.UIT.R, config={align = "cm", padding = 0.05, colour = G.C.CLEAR}, nodes = {
        challenge.author and {n=G.UIT.C, config = {align = "cm", padding = 0.1, colour = G.C.L_BLACK, r = 0.1}, nodes = {
          {n=G.UIT.T, config = {text = "Challenge Author", scale = 0.3, colour = G.C.UI.TEXT_LIGHT}},
          {n=G.UIT.T, config = {text = ":", scale = 0.3, colour = G.C.UI.TEXT_LIGHT}},
          {n=G.UIT.T, config = {text = challenge.author, scale = 0.3, colour = G.C.DARK_EDITION}},
        }},
        challenge.version and {n=G.UIT.C, config = {align = "cm", padding = 0.1, colour = G.C.L_BLACK, r = 0.1}, nodes = {
          {n=G.UIT.T, config = {text = "Challenge Version", scale = 0.3, colour = G.C.UI.TEXT_LIGHT}},
          {n=G.UIT.T, config = {text = ":", scale = 0.3, colour = G.C.UI.TEXT_LIGHT}},
          {n=G.UIT.T, config = {text = challenge.version, scale = 0.3, colour = G.C.DARK_EDITION}},
        }},
      }},
      {n = G.UIT.R, config = {align = "cm", colour = G.C.CLEAR}, nodes = {
        {n=G.UIT.C, config={align = "cm", padding = 0.1, colour = G.C.L_BLACK, r = 0.1, minw = 3}, nodes={
          override_rule_list,starting_rule_list
        }},
      }}
'''
ovewrite = true

# Insert setup button
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''not is_row and {n=G.UIT.R, config={align = "cm", minh = 0.9}, nodes={'''
position = "before"
payload = '''
    not is_row and {n=G.UIT.R, config={align = "cm", minh = 0.9}, nodes={
      {n=G.UIT.C, config={align = "cm", padding = 0.1, minh = 0.7, minw = 7, r = 0.1, hover = true, colour = G.C.BLUE, button = "start_challenge_run", shadow = true, id = _id}, nodes={
        {n=G.UIT.T, config={text = localize('b_play_cap'), scale = 0.5, colour = G.C.UI.TEXT_LIGHT,func = 'set_button_pip', focus_args = {button = 'x',set_button_pip = true}}}
      }},
      {n=G.UIT.C, config={align = "cm", padding = 0.1, minh = 0.7, minw = 0.2, r = 0.1}, nodes = {}},
      attempt_stake_button(8),
    }} or
'''
match_indent = true
